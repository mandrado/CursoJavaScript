## 170. Eslint

npm init -y
npx eslint --init

# escolha
# Need to install the following packages:
To check syntax, find problems, and enforce code style

# What type of modules does your project use? ...
JavaScript modules (import/export)

#? Which framework does your project use? ...
None of these

#? Does your project use TypeScript? » No

# ? Where does your code run? ...  (Press <space> to select, <a> to toggle all, <i> to invert selection)
  Browser
√ Node

#? How would you like to define a style for your project? ..
> Use a popular style guide
  Answer questions about your style
  Inspect your JavaScript file(s)

  # ? Which style guide do you want to follow? ...
> Airbnb: https://github.com/airbnb/javascript
  Standard: https://github.com/standard/standard
  Google: https://github.com/google/eslint-config-google
  XO: https://github.com/xojs/eslint-config-xo


# ? What format do you want your config file to be in? ...
> JavaScript
  YAML
  JSON

# eslint-config-airbnb-base@latest eslint@^5.16.0 || ^6.8.0 || ^7.2.0 eslint-plugin-import@^2.22.1
? Would you like to install them now with npm? » Yes


# 172. Nodemon e Sucrase

# Nodemon ->
# Sucrase -> permite utilizar import/export dos modulos do JavaScript ES6
npm i nodemon sucrase --save-dev

# 173. Estruturando o projeto
npm i express

# 174. Configurando e testando o Sequelize
npm i dotenv
npm i sequelize mariadb
npm i -D sequelize-cli (instalando como dependência de desenvolvimento)

# iniciou o servidor no Google Cloud Plataform
gcloud compute instances start cursojs

# configurou o Sequelize
# criou o schema escola do banco de dados MariaDB
# criou o arquivo que prepara os campos da tabela alunos
npx Sequelize migration:create --name=alunos

# criou os campos data tabela no arquivo criado pelo sequelize
# executa novamente o sequelize para em fim executar a migração dos
# os campos para o banco de dados
npx sequelize db:migrate

# DESLIGAR o servidor no Google Cloud Plataform
gcloud compute instances stop cursojs

# 175. Criando usuários
# iniciou o servidor no Google Cloud Plataform
gcloud compute instances start cursojs

npx sequelize migration:create --name=users

# cria os campos no arquivo criado para users
# executa a migração da nova tabela para o banco de dados
npx sequelize db:migrate

# se algo ocorrer de errado, a ação pode ser desfeita com undo
npx sequelize db:migrate:undo

# criar as validações dos campos no arquivo models/User
# instala o bcryptjs para criar o hash das senhas
npm i bcryptjs

# DESLIGAR o servidor no Google Cloud Plataform
gcloud compute instances stop cursojs

# 176. CRUD de usuários
# LIGAR o servidor no Google Cloud Plataform
gcloud compute instances start cursojs
npm run dev

# DESLIGAR o servidor no Google Cloud Plataform
gcloud compute instances stop cursojs --zone=us-central1-a

# 177. Gerando o JWT do usuário
# O JSON Web Token é um padrão da Internet para a criação de dados com assinatura
# opcional e/ou criptografia cujo payload contém o JSON que afirma algum número de
# declarações. Os tokens são assinados usando um segredo privado ou uma chave
# pública/privada

npm i jsonwebtoken

# LIGAR o servidor no Google Cloud Plataform
gcloud compute instances start cursojs --zone=us-central1-a

npm run dev

# DESLIGAR o servidor no Google Cloud Plataform
gcloud compute instances stop cursojs --zone=us-central1-a

# 178. Middleware de verificação de login do JWT

# Duas formas de utilizar o Token
# 1ª Auth -> escolha Bearer Token e em TOKEN coloque o token gerando
# 2º Header -> no primeiro campo informe "authorization" em value coloque Baerer, de um espaço e coloque o token.

# LIGAR o servidor no Google Cloud Plataform
gcloud compute instances start cursojs --zone=us-central1-a
npm run dev

# 179. Correções de segurança para usuários

# Removendo coisas que não precisam existir em um sistema real
# precisamos de uma página para criar usuários com acesso a usuários não logados:
# precisamos de uma página para atualisar os dados do usuário
# usuário não pode deletar outros usuários, apenas seus dados
# chegar na base se o id e email ainda correspondem ao mesmo usuário

# DESLIGAR o servidor no Google Cloud Plataform
gcloud compute instances stop cursojs --zone=us-central1-a

# 180. Criando seeds
# as vezes precisamos gerar dados aleatóriamente, como por exemplo
# criar vários alunos para realizar testes

# criar vários usuários
npx sequelize seed:generate --name criar-usuarios

# editar o arquivo gerado pelo sequelize.

# rodar o servidor:
npm run dev

# em outro terminal, pedir para o sequelize executar o arquivo que cria usuários
npx sequelize db:seed:all










