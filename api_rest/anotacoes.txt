## 170. Eslint

npm init -y
npx eslint --init

# escolha
# Need to install the following packages:
To check syntax, find problems, and enforce code style

# What type of modules does your project use? ...
JavaScript modules (import/export)

#? Which framework does your project use? ...
None of these

#? Does your project use TypeScript? » No

# ? Where does your code run? ...  (Press <space> to select, <a> to toggle all, <i> to invert selection)
  Browser
√ Node

#? How would you like to define a style for your project? ..
> Use a popular style guide
  Answer questions about your style
  Inspect your JavaScript file(s)

  # ? Which style guide do you want to follow? ...
> Airbnb: https://github.com/airbnb/javascript
  Standard: https://github.com/standard/standard
  Google: https://github.com/google/eslint-config-google
  XO: https://github.com/xojs/eslint-config-xo


# ? What format do you want your config file to be in? ...
> JavaScript
  YAML
  JSON

# eslint-config-airbnb-base@latest eslint@^5.16.0 || ^6.8.0 || ^7.2.0 eslint-plugin-import@^2.22.1
? Would you like to install them now with npm? » Yes


# 172. Nodemon e Sucrase

# Nodemon ->
# Sucrase -> permite utilizar import/export dos modulos do JavaScript ES6
npm i nodemon sucrase --save-dev

# 173. Estruturando o projeto
npm i express

# 174. Configurando e testando o Sequelize
npm i dotenv
npm i sequelize mariadb
npm i -D sequelize-cli (instalando como dependência de desenvolvimento)

# iniciou o servidor no Google Cloud Plataform
gcloud compute instances start cursojs

# configurou o Sequelize
# criou o schema escola do banco de dados MariaDB
# criou o arquivo que prepara os campos da tabela alunos
npx Sequelize migration:create --name=alunos

# criou os campos data tabela no arquivo criado pelo sequelize
# executa novamente o sequelize para em fim executar a migração dos
# os campos para o banco de dados
npx sequelize db:migrate


